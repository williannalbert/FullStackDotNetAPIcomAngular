1 - gerar interface clicando com o botão direito na pasta models e preencher os arquivos com as models

2 - criar as services na pasta service clicando com o botão direito e gerando 

3 - injeção de dependecia pode ser incluídos na service com o @injectable, na typscript do componente com //providers: [EventoService] ou na appmodules como providers: [EventoService]

4 - se atentar a tipagem de funções na service

5 - criar pasta helpers para funções auxiliares, como a formatação da data. Botão direito e gerar pipe (ex: DateTimeFormat)
esse pipe é usado no html de evento para formatação tipo uppercase
**o pipe DateTimeFormat está extedendo o DatePipe e retornando o super para "sobrescrever" o Date
**o nome do Pipe não pode ser o mesmo da classe. Ex: pipe = DateFormatPipe // classe DateTimeFormatPipe
**Necessário incluir o Pipe criado na appmodules 

6 - criar pasta  utils e suas classes 

7 - adicionando tooltip, modal e dropdown na appmodules
*informações tiradas do sitte ngx-bootstrap

8 - adicionar o toaster
site: https://www.npmjs.com/package/ngx-toastr

npm install ngx-toastr@13.2.0 --save
npm install @angular/animations@13.2.0 --save

adicionar "node_modules/ngx-toastr/toastr.css"  no arquivio "angular.json"
adicionar o ToastrModule na appmodules

9 - adicionar o spinner e importar na appmodules
site: https://www.npmjs.com/package/ngx-spinner/v/10.0.1

npm i ngx-spinner@10.0.1

junto com o spinner foi adicionado o schemas: [CUSTOM_ELEMENTS_SCHEMA] e importado em @core na mesma classe