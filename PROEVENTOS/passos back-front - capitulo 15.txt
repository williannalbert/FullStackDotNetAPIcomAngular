1 - dentro de ProEventos -> Persistence criar o diretorio de models e incluir models de controle de paginação

2 - Em pageList -> herança de T ao iniciar e no constutor, e significa que é uma lista genérica

3 - inclusão da paginação em ProEventos.Persist

4 - Editar a interface de eventos e sus implementações para incluir a paginação

5 - Adicionar PageParams ao get de eventoController, usando o fromquery
No postman incluir esses campos na aba Params

6 - IMPORTANTE
ERRO DbContextOptionsBuilder.EnableSensitiveDataLogging se dava pois o Term de PageParams estava nulo e ao comparar com o contains não há resolução
resolver incluindo valor vazio no get como parametro

ERRO 2 ProEventos.Persistence.Models.PageList`1[[ProEventos.Application.Dtos.EventoDto, ProEventos.Application
Necessário criar um construtor vazio para PageList, e em EventoService criar um mapear os parametros manualmente

7 - Criar uma classe em Extensions -> Pagination
*Necessário para incluir a paginação ao Header da requisição, que será usado no angular
---------------------------------------------------------------------
ANGULAR
----------------------------------------------------------------------
8 - Importar o Pagination em app modules 

9 - criar classe em models -> Pagination

10 - alterar a service de eventos para incluir paginação

11 - incluir o component debounceTime no evento-lista.component.ts para que não seja feita uma requisição a cada letra digitada. Setado um timer